[{"C:\\Users\\dell\\react-todo-app\\src\\index.js":"1","C:\\Users\\dell\\react-todo-app\\src\\App.js":"2","C:\\Users\\dell\\react-todo-app\\src\\components\\Todo.js":"3","C:\\Users\\dell\\react-todo-app\\src\\firebase.js":"4"},{"size":220,"mtime":1608243609350,"results":"5","hashOfConfig":"6"},{"size":2261,"mtime":1608297849801,"results":"7","hashOfConfig":"6"},{"size":4910,"mtime":1608298988683,"results":"8","hashOfConfig":"6"},{"size":530,"mtime":1608290449900,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"r7na5w",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\Users\\dell\\react-todo-app\\src\\index.js",[],["20","21"],"C:\\Users\\dell\\react-todo-app\\src\\App.js",[],"C:\\Users\\dell\\react-todo-app\\src\\components\\Todo.js",["22","23"],"\r\nimport React, { useState } from \"react\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Button,\r\n    Modal,\r\n    Input,\r\n} from \"@material-ui/core\";\r\nimport './todo.css'\r\nimport { db } from '../firebase'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        position: \"absolute\",        // position: \"center\",\r\n        minWidth: 400,\r\n        maxWidth:800,\r\n        borderRadius: 17,\r\n        backgroundColor: theme.palette.background.paper,\r\n        // border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n        border: 'none',\r\n        \r\n    },\r\n\r\n    button: {\r\n        width: 150,\r\n        // border: '2px solid #000',\r\n        margin: \"10px\",\r\n    },\r\n    buttonUpdate: {\r\n        width: 150,\r\n        // border: '2px solid #000',\r\n        margin: \"10px\",\r\n        backgroundColor: 'green',\r\n        color: 'white'\r\n    },\r\n    head: {\r\n        textAlign: 'center'\r\n    },\r\n    input: {\r\n        height: 25,\r\n        marginRight: 33\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    itemText: {\r\n        textTransform: 'capitalize'\r\n    }\r\n}));\r\n\r\nfunction Todo(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState();\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const updateTodo = () => {\r\n        // update the todo with the new input\r\n        db.collection(\"todos\").doc(props.todo.id).set(\r\n            {\r\n                todo: input,\r\n            },\r\n            { merge: true }\r\n        );\r\n        setOpen(false);\r\n    };\r\n\r\n    const customLeaveAnimation = {\r\n        from: { transform: 'scale(1, 1)' },\r\n        to: { transform: 'scale(0.5, 1) translateY(-20px)' }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal open={open} onClose={(e) => setOpen(false)}>\r\n                <div className={classes.modal}>\r\n                    <h2 className={classes.head}>Update  Task</h2>\r\n                    <div className={classes.container}>\r\n\r\n                        <input\r\n                            placeholder={props.todo.todo}\r\n                            value={input}\r\n                            onChange={(Event) => setInput(Event.target.value)}\r\n                            className={classes.input}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            onClick={updateTodo}\r\n                            className={classes.buttonUpdate}\r\n                            disabled={!input}\r\n                        >\r\n                            Upload ✔\r\n                       </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <FlipMove leaveAnimation={customLeaveAnimation}>\r\n                <div className=\"todoList__container\">\r\n                    <List className=\"todo__list\">\r\n                        <ListItem>\r\n                            <ListItemAvatar></ListItemAvatar>\r\n                            <ListItemText className={classes.itemText} primary={props.todo.todo} />\r\n                        </ListItem>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={(Event) =>\r\n                                db.collection(\"todos\").doc(props.todo.id).delete()\r\n                            }\r\n                            className={classes.button}\r\n                            startIcon={<DeleteIcon />}\r\n                        >\r\n                            Delete\r\n                           </Button>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={(e) => setOpen(true)}\r\n                            className={classes.button}\r\n                            endIcon={<EditIcon>send</EditIcon>}\r\n                        >\r\n                            Edit\r\n                                 </Button>\r\n\r\n                        {/* <Button className=\"edit__btn\" onClick={e => setOpen(true)}>Edit</Button> */}\r\n                        {/* <DeleteForeverIcon onClick={Event =>db.collection('todos').doc(props.todo.id).delete()}>❌Delete</DeleteForeverIcon> */}\r\n                    </List>\r\n                </div>\r\n            </FlipMove>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","C:\\Users\\dell\\react-todo-app\\src\\firebase.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":10,"column":5,"nodeType":"30","messageId":"31","endLine":10,"endColumn":10},{"ruleId":"28","severity":1,"message":"32","line":74,"column":11,"nodeType":"30","messageId":"31","endLine":74,"endColumn":21},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'handleOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]